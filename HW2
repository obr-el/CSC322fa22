var scene = new THREE.Scene();
var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );
camera.position.z = 45;


var renderer = new THREE.WebGLRenderer();
renderer.setSize( window.innerWidth, window.innerHeight );
document.body.appendChild( renderer.domElement );

function addFace(verArray,hexcolor) {
  const geometry = new THREE.BufferGeometry();
  const vertices = verArray
  geometry.setAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );
  const material = new THREE.MeshBasicMaterial( { color: hexcolor } );
  const mesh = new THREE.Mesh( geometry, material );
  scene.add(mesh);
}

const vertices = new Float32Array( [
	-2.75, -2.75, -50,
  2.75, -2.75, -50,
  -1.7, -1.7, -5,
  
  -1.7, -1.7, -5,
  2.75, -2.75, -50,
  1.7, -1.7, -5,
] );
addFace(vertices,0x800869);

const vertices2 = new Float32Array( [
	-2.75, 2.75, -50,
  -2.75, -2.75, -50,
  -1.7, 1.7, -5,
  
  -1.7, 1.7, -5,
  -2.75, -2.75, -50,
  -1.7, -1.7, -5,
] );
addFace(vertices2,0xa8e6cf);

const vertices3 = new Float32Array( [
	2.75, -2.75, -50,
  2.75, 2.75, -50,
  1.7, -1.7, -5,
  
  1.7, -1.7, -5,
  2.75, 2.75, -50,
  1.7, 1.7, -5,
] );
addFace(vertices3,0xfffe38);

const vertices4 = new Float32Array( [
	2.75, 2.75, -50,
  -2.75, 2.75, -50,
  1.7, 1.7, -5,
  
  1.7, 1.7, -5,
  -2.75, 2.75, -50,
  -1.7, 1.7, -5,
] );
addFace(vertices4,0xe5e4e2);

const triface1 = new Float32Array( [
	0, 0, 0,
  -1.7, -1.7, -5,
  1.7, -1.7, -5

])
addFace(triface1,0xef2922)

const triface2 = new Float32Array( [
	0, 0, 0,
  -1.7, 1.7, -5,
  -1.7, -1.7, -5

])
addFace(triface2,0xd0c4d0)

const triface3 = new Float32Array( [
	0, 0, 0,
  1.7, -1.7, -5,
  1.7, 1.7, -5

])
addFace(triface3,0x8b37e4)

const triface4 = new Float32Array( [
	0, 0, 0,
  1.7, 1.7, -5,
  -1.7, 1.7, -5

])
addFace(triface4,0xcef310)

scene.rotation.x=-1;
var animate = function () {
	requestAnimationFrame( animate );
	scene.rotation.z += 0.01;

	renderer.render( scene, camera );
	
};

animate();
